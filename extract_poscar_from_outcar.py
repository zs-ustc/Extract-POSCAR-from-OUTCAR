def extract_structure_from_outcar(outcar_file):
    lattice_vectors = []
    atom_symbols = []
    atom_counts = []
    atom_positions = []
    found_lattice_vectors = False
    with open(outcar_file, 'r') as f:
        lines = f.readlines()
        for idx, line in enumerate(lines):
            if not found_lattice_vectors and 'direct lattice vectors' in line:
                lattice_vectors.append([float(x) for x in lines[idx + 1].split()[:3]])
                lattice_vectors.append([float(x) for x in lines[idx + 2].split()[:3]])
                lattice_vectors.append([float(x) for x in lines[idx + 3].split()[:3]])
                found_lattice_vectors = True
            elif 'TITEL  =' in line:
                atom_symbols.append(line.strip().split()[3])  # 提取元素符号
            elif 'ions per type' in line:
                counts = [int(x) for x in line.strip().split()[4:]]  # 提取每种元素的数量
                atom_counts.extend(counts)
            elif 'NIONS =' in line:
                num_atoms = int(line.split()[-1])  # extract number of atoms
            elif 'position of ions in cartesian coordinates' in line:
                for line in lines[idx + 1:idx + 1 + num_atoms]:
                    line = line.strip()
                    if '--------' in line:
                        break
                    atom_positions.append(line.split()[:3])
    return lattice_vectors, atom_symbols,atom_counts, atom_positions

def write_poscar(lattice_vectors, atom_symbols,atom_counts, atom_positions, poscar_file):
    with open(poscar_file, 'w') as f:
        f.write("Generated by extract_from_outcar.py\n")
        f.write("1.0\n")
        for vector in lattice_vectors:
            f.write("{:20.16f} {:20.16f} {:20.16f}\n".format(vector[0], vector[1], vector[2]))
        f.write(" ".join(atom_symbols) + '\n')
        f.write(" ".join([str(x) for x in atom_counts]) + '\n')
        f.write("Cartesian\n")
        for pos in atom_positions:
            f.write(" ".join([str(x) for x in pos]) + '\n')

# Example usage:
outcar_file = 'OUTCAR'
poscar_file = 'POSCAR'

lattice_vectors, atom_symbols, atom_counts,atom_positions = extract_structure_from_outcar(outcar_file)
write_poscar(lattice_vectors, atom_symbols,atom_counts, atom_positions, poscar_file)